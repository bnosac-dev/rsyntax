% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/syntax_rules.r
\name{create_rule}
\alias{create_rule}
\title{Write rules for extracting syntactic elements from tokens with dependency relations.}
\usage{
create_rule(..., save = NA, rel = NULL, not_rel = NULL, select = NULL,
  g_id = NULL)
}
\arguments{
\item{...}{used to nest the \link{parents} and \link{children} functions as unnamed arguments. See the documentation of these
functions for details.}

\item{save}{A character vector, specifying the column name under which the selected tokens are returned. 
If NA, the column is not returned.}

\item{rel}{A character vector, specifying the relation of the node to its parent.}

\item{not_rel}{Like rel, but for excluding relations}

\item{select}{An expression to select specific parents/children. All columns in the tokens input for \link{find_nodes} can be used, 
as well as any column in the environment from which find_nodes is called. (similar to \link{subset.data.frame}).
Note (!!) that select should not rely on absolute positions (i.e. choosing rows with a logical vector or a numeric vector with indices).}

\item{g_id}{A data.frame or data.table with 2 columns: (1) doc_id and (2) token_id, indicating the global id. While this can also be done using 'select', this alternative uses fast binary search.}
}
\value{
A function for performing the specified rule, using the \link{apply_rules} function.
}
\description{
This is the primary workhorse for writing rules for quote and clause extraction.
Specific nodes can be selected using standard R expressions, such as: 
\itemize{
\item pos == "verb" & lemma \%in\% .SAY_VERBS
}
Then, from the position of these nodes, you can lookup children, optionally with 
another select expression. This can be done recursively to find children of children etc.
}
\details{
To look for parents or children, use the \link{parents} and \link{children} functions (and optionally \link{all_parents} or \link{all_children}).
Please look at the examples below for a recommended syntactic style for using the find_nodes function and these nested functions.
}
\examples{
## it is convenient to first prepare vectors with relevant words/pos-tags/relations
.SAY_VERBS = c("tell", "show","say", "speak") ## etc.
.QUOTE_RELS=  c("ccomp", "dep", "parataxis", "dobj", "nsubjpass", "advcl")
.SUBJECT_RELS = c('su', 'nsubj', 'agent', 'nmod:agent') 

quotes_direct = create_rule(select = lemma \%in\% .SAY_VERBS,
                         children(save = 'source', rel = .SUBJECT_RELS),
                         children(save = 'quote', rel = .QUOTE_RELS))
quotes_direct ## print shows rule
}
