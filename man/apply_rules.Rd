% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/syntax_rules.r
\name{apply_rules}
\alias{apply_rules}
\title{Apply rules created with \link{create_rule}}
\usage{
apply_rules(tokens, ..., as_chain = T, block = NULL, check = T)
}
\arguments{
\item{tokens}{A tokenIndex data.table, created with \link{as_tokenindex}, or any data.frame with the required columns (see \link{tokenindex_columns}).}

\item{...}{rule functions, as created with \link{create_rule}. Can also be a list with rule functions.}

\item{as_chain}{If TRUE, Nodes that have already been assigned assigned earlier in the chain will be ignored (see 'block' argument).}

\item{block}{Optionally, specify ids (doc_id - token_id pairs) where find_nodes will stop (ignoring the id and recursive searches through the id). 
Can also be a data.table returned by (a previous) apply_rules, in which case all ids are blocked.}

\item{check}{If TRUE, return a warning if nodes occur in multiple patterns, which could indicate that the find_nodes query is not specific enough.}
}
\value{
A data.table in which each row is a node for which all conditions are satisfied, and each column is one of the linked nodes 
               (parents / children) with names as specified in the save argument.
}
\description{
Apply rules created with \link{create_rule}
}
\examples{
## it is convenient to first prepare vectors with relevant words/pos-tags/relations
.SAY_VERBS = c("tell", "show","say", "speak") ## etc.
.QUOTE_RELS=  c("ccomp", "dep", "parataxis", "dobj", "nsubjpass", "advcl")
.SUBJECT_RELS = c('su', 'nsubj', 'agent', 'nmod:agent') 

quotes_direct = create_rule(select = lemma \%in\% .SAY_VERBS,
                         children(save = 'source', rel = .SUBJECT_RELS),
                         children(save = 'quote', rel = .QUOTE_RELS))
quotes_direct ## print shows rule

tokens = subset(tokens_corenlp, sentence == 1)

nodes = apply_rules(tokens, quotes_direct)
nodes
annotate(tokens, nodes, column = 'example')

}
