% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_nodes.r
\name{find_nodes_functions}
\alias{find_nodes_functions}
\alias{children}
\alias{parents}
\title{Search for parents or children in find_nodes}
\usage{
children(..., save = NA, p_rel = NULL, not_p_rel = NULL, lemma = NULL,
  not_lemma = NULL, POS = NULL, not_POS = NULL, select = NULL,
  g_id = NULL, NOT = F, depth = 1)

parents(..., save = NA, p_rel = NULL, not_p_rel = NULL, lemma = NULL,
  not_lemma = NULL, POS = NULL, not_POS = NULL, select = NULL,
  g_id = NULL, NOT = F, depth = 1)
}
\arguments{
\item{...}{can be used to nest other children and parents functions, to look for grandchildren, 
grandgrandchildren, etc. This is only the first argument for syntactic reasons (see details). Please see the examples for recommended syntax.}

\item{save}{A character vector, specifying the column name under which the selected tokens are returned. 
If NA, the column is not returned.}

\item{p_rel}{A character vector, specifying the relation of the node to its parent. Note that if you want to filter on the relation of a node to its child,
you should nest a children() search and specify p_rel there.}

\item{not_p_rel}{Like p_rel, but for excluding relations}

\item{lemma}{A character vector, specifying lemma}

\item{not_lemma}{Like lemma, but for excluding lemma}

\item{POS}{A character vector, specifying part-of-speech tags}

\item{not_POS}{Like POS, but for excluding part-of-speech tags}

\item{select}{An expression to select specific parents/children, which can use any columns in the token data (similar to \link{subset.data.frame}).
This should (preferably) not be used for defining rules included in rsyntax, because the column names used will be fixed (p_rel, lemma, pos and g_id use will use the \link{tokenindex_columns} aliases).
Note (!!) that select will be performed on the children only (i.e. a subset of the tokenIndex) and thus should not rely on
absolute positions. For instance, do not use a logical vector unless it is a column in the tokenIndex.}

\item{g_id}{A numeric vector, to filter on global id (.G_ID). While this can also be done using 'select', this alternative uses fast binary search.}

\item{NOT}{If TRUE, exclude these children instead of adding them. The filter parameters still work to NOT select specific children.}

\item{depth}{A positive integer, determining how deep parents/children are sought. The default, 1, 
means that only direct parents and children of the node are retrieved. 2 means children and grandchildren, etc.}
}
\value{
Should not be used outside of \link{find_nodes}
}
\description{
Can be used (and should only be used) inside of the \link{find_nodes} function.
Enables searching for parents or children, either direct (depth = 1) or untill a given depth (depth 2 for children and grandchildren, etc.).
}
\details{
Searching for parents/children within find_nodes works as an AND condition: if it is used, the node must have parents/children.
If select is used to pass an expression, the node must have parents/children for which the expression is TRUE.
The save argument can be used to remember the global token ids (.G_ID) of the parents/children under a given column name.


Having nested queries can be confusing, so we tried to develop the find_nodes function and the accompanying functions in a way
that clearly shows the different levels. As shown in the examples, the idea is that each line is a node, and to look for parents
or children, we put them on the next line with indentation (in RStudio, it should automatically allign correctly when you press enter inside
of the children() or parents() functions).
}
